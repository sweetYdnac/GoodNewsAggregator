<?xml version="1.0"?>
<doc>
    <assembly>
        <name>by.Reba.WebAPI</name>
    </assembly>
    <members>
        <member name="T:by.Reba.WebAPI.Controllers.ArticlesController">
            <summary>
            Controller for work with articles
            </summary>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.ArticlesController.GetArticle(System.Guid)">
            <summary>
            Get Article from storage with specified id. If used is authorised returned article have comments trees.
            </summary>
            <param name="id">Id of article</param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.ArticlesController.GetArticles(by.Reba.WebAPI.Models.Requests.GetArticlesRequestModel)">
            <summary>
            Get articles by request filter
            </summary>
            <param name=""></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.ArticlesController.CreateArticle(by.Reba.WebAPI.Models.Requests.Article.CreateArticleRequestModel)">
            <summary>
            Create article
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.ArticlesController.PatchArticle(by.Reba.WebAPI.Models.Requests.Article.PatchArticleRequestModel)">
            <summary>
            Patch specific article
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.ArticlesController.DeleteArticle(System.Guid)">
            <summary>
            Delete article by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:by.Reba.WebAPI.Controllers.ArticlesInitializerController">
            <summary>
            Controller for initialize articles recieve Hangfire Jobs
            </summary>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.ArticlesInitializerController.AddArticles">
            <summary>
            Initialize hangfire jobs for work with recieve articles from external resources logic
            </summary>
            <returns></returns>
        </member>
        <member name="T:by.Reba.WebAPI.Controllers.CommentController">
            <summary>
            Controller for work with comment
            </summary>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.CommentController.GetComment(System.Guid)">
            <summary>
            Get Comment by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.CommentController.CreateComment(by.Reba.WebAPI.Models.Requests.Comment.CreateCommentRequestModel)">
            <summary>
            Create comment
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.CommentController.PatchComment(by.Reba.WebAPI.Models.Requests.Comment.PatchCommentRequestModel)">
            <summary>
            Patch specific comment
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.CommentController.RateComment(by.Reba.WebAPI.Models.Requests.Comment.RateCommentRequestModel)">
            <summary>
            Rate comment
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:by.Reba.WebAPI.Controllers.CommentsTreesController">
            <summary>
            Controller for work with comments tree
            </summary>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.CommentsTreesController.GetCommentsTrees(System.Guid)">
            <summary>
            Get comments trees from specific article
            </summary>
            <param name="articleId"></param>
            <returns></returns>
        </member>
        <member name="T:by.Reba.WebAPI.Controllers.PositivityController">
            <summary>
            Controller for work with positivities
            </summary>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.PositivityController.GetPositivity(System.Guid)">
            <summary>
            Get Positivity by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.PositivityController.GetPositivities">
            <summary>
            Get positivities collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.PositivityController.CreatePositivity(by.Reba.WebAPI.Models.Requests.Positivity.CreatePositivityRequestModel)">
            <summary>
            Create positivity
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.PositivityController.PatchPositivity(by.Reba.WebAPI.Models.Requests.Positivity.PatchPositivityRequestModel)">
            <summary>
            Patch specific positivity
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.PositivityController.DeletePositivity(System.Guid)">
            <summary>
            Delete positivity by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:by.Reba.WebAPI.Controllers.PreferenceController">
            <summary>
            Controller for work with user preference resource
            </summary>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.PreferenceController.GetPreference(System.Guid)">
            <summary>
            Get preference by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.PreferenceController.CreatePreference(by.Reba.WebAPI.Models.Requests.Preference.CreatePreferenceRequestModel)">
            <summary>
            Create preference for specific user
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.PreferenceController.PatchPreference(by.Reba.WebAPI.Models.Requests.Preference.PatchPreferenceRequestModel)">
            <summary>
            Patch preference
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:by.Reba.WebAPI.Controllers.SourceController">
            <summary>
            Controller for work with sources
            </summary>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.SourceController.GetSource(System.Guid)">
            <summary>
            Get source by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.SourceController.GetSources(by.Reba.WebAPI.Models.Requests.Sources.GetSourcesRequestModel)">
            <summary>
            Get sources by request filter
            </summary>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.SourceController.CreateSource(by.Reba.WebAPI.Models.Requests.Sources.CreateSourceRequestModel)">
            <summary>
            Create source
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.SourceController.PatchSource(by.Reba.WebAPI.Models.Requests.Sources.PatchSourceRequestModel)">
            <summary>
            Patch specific source
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.SourceController.DeleteSource(System.Guid)">
            <summary>
            Delete source by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:by.Reba.WebAPI.Controllers.TokenController">
            <summary>
            Controller for work with tokens
            </summary>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.TokenController.CreateJwtToken(by.Reba.WebAPI.Models.Requests.LoginUserRequestModel)">
            <summary>
            Register user
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.TokenController.RefreshToken(by.Reba.WebAPI.Models.Requests.RefreshTokenRequestModel)">
            <summary>
            Reauthorize user by creating new token
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:by.Reba.WebAPI.Controllers.TokenController.RevokeToken(by.Reba.WebAPI.Models.Requests.RefreshTokenRequestModel)">
            <summary>
            Revoke refresh token with specified model
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:by.Reba.WebAPI.Models.Responces.ErrorModel">
            <summary>
            Model for returning errors from api
            </summary>
        </member>
        <member name="P:by.Reba.WebAPI.Models.Responces.ErrorModel.Message">
            <summary>
            Error message
            </summary>
        </member>
        <member name="T:by.Reba.WebAPI.Models.Responces.TokenResponse">
            <summary>
            Model for returning Jwt token from api
            </summary>
        </member>
    </members>
</doc>
